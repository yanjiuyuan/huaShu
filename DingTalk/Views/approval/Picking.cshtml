@{
    Layout = null;
}

<!--右侧实体内容-->
<el-main id="partPage" style="position:relative;">
    <!--标题-->
    <div class="head-fixed" onclick="loadPage('/Main/approval')">
        <i class="el-icon-arrow-left"></i>
        领料申请-{{nodeInfo.NodeName}}
    </div>
    <!--物料搜索-->
    <div>
        <span style="color:red">*</span><span style="padding:3px;">流水号添加</span><el-input v-model="searchForm.taskid" style="width:200px;"></el-input>
        <el-button type="primary" v-on:click="searchAndAdd2">添加</el-button>
        <span style="color:red">*</span><span style="padding:3px;">供应商添加</span><el-input v-model="searchForm.business" style="width:200px;"></el-input>
        <el-button type="primary" v-on:click="searchAndAdd">添加</el-button>
    </div>
    <div style="margin-top:10px;">
        <span style="color:red">*</span><span style="padding:3px;">关键字搜索</span><el-input v-model="searchForm.name" style="width:200px;"></el-input>
        <el-button type="primary" v-on:click="searchCode">搜索</el-button>
    </div>
    <!--物料列表表格實體-->
    <el-table :data="tableData" stripe border>
        <el-table-column prop="fNumber" label="物料编码"></el-table-column>
        <el-table-column prop="fName" label="物料名称"></el-table-column>
        <el-table-column prop="fQty" label="实收数量"></el-table-column>
        <el-table-column prop="fModel" label="规格型号"></el-table-column>
        <el-table-column prop="unitName" label="单位"></el-table-column>
        <el-table-column prop="fPrice" label="单价"></el-table-column>
        <el-table-column prop="fAmount" label="金额"></el-table-column>
        <el-table-column prop="fFullName" label="供应商"></el-table-column>
        <el-table-column label="操作">
            <template slot-scope="scope">
                <el-button size="mini"
                           v-on:click="addGood(scope.$index, scope.row)">选择</el-button>
            </template>
        </el-table-column>
    </el-table>
    <!--底部翻頁-->
    <div style="text-align:right">
        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[1, 3, 5, 10]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="totalRows">
        </el-pagination>
    </div>
    <hr />
    <h3>已选物料</h3>
    <!--采购列表表格實體-->
    <el-table :data="purchaseList" stripe border>
        <el-table-column prop="fNumber" label="物料编码"></el-table-column>
        <el-table-column prop="fName" label="物料名称"></el-table-column>
        <el-table-column prop="fQty" label="实收数量" width="100">
            <template slot-scope="scope">
                <el-input v-model="scope.row.fQty" prop="Count" :class="{ redborder:scope.row.fQty =='' || scope.row.fQty > scope.row.have}"></el-input>
            </template>
        </el-table-column>
        <el-table-column prop="fModel" label="规格型号"></el-table-column>
        <el-table-column prop="unitName" label="单位"></el-table-column>
        <el-table-column prop="fPrice" label="单价"></el-table-column>
        <el-table-column prop="fAmount" label="金额"></el-table-column>
        <el-table-column prop="fFullName" label="供应商"></el-table-column>
        <el-table-column label="操作" width="80">
            <template slot-scope="scope">
                <el-button size="mini" type="danger" v-on:click="deleteGood(scope.$index, scope.row)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>

    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm"
             id="uploadForm" enctype="multipart/form-data">
        <el-form-item label="标题" prop="Title">
            <el-input v-model="ruleForm.Title"></el-input>
        </el-form-item>
        <el-form-item label="申请人" prop="name">
            <el-input v-model="ruleForm.name" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="备注" prop="remark">
            <el-input v-model="ruleForm.remark"></el-input>
        </el-form-item>
        <!--添加审批人-->
        <sam-approver-list :nodeList="nodeList" :single="true" :nodedata="nodeInfo"></sam-approver-list>
        <el-form-item>
            <el-button type="primary" v-on:click="onSubmit('ruleForm')" :disabled="disablePage">提交申请</el-button>
            @*<el-button type="primary" v-on:click="saveTempData">临时保存</el-button>*@
            @*<el-button v-on:click="resetForm('ruleForm')">重置</el-button>*@
        </el-form-item>
    </el-form>
</el-main>

<script>
    var demo = new Vue({
        el: "#partPage",
        mixins: [mixin],
        data: function () {
            return {
                data: [],
                tableData: [],
                purchaseList: [],
                nodeList: [],
                projectList: [],
                nodeInfo: {},
                searchForm: {
                    business: '',
                    name: '',
                    taskid: ''
                },
                ruleForm: {
                    name: DingData.nickName,
                    remark: '',
                    ProjectName: '',
                    Title: '领料申请',
                    ProjectId: null,
                    inputProjectName: '',
                    inputProjectId: '',
                    Time: ''
                }
            }
        },
        methods: {
            onSubmit(formName) {
                if (!this.purchaseList.length) {
                    this.elementAlert('提交失败', '没有选择物料')
                    return
                }
                for (let p of this.purchaseList) {
                    if (p.fQty == '' || p.fQty > p.have) {
                        this.elementAlert('提交失败', '已选物料实收数量不正确')
                        return
                    }
                }
                var ProjectName
                for (let p of this.projectList) {
                    if (p.ProjectId == this.ruleForm.ProjectId) {
                        ProjectName = p.ProjectName
                    }
                }
                var that = this
                let callBack = function (taskId) {
                    for (let p of that.purchaseList) {
                        p['TaskId'] = taskId
                    }
                    that.PostData('/Pick/Save', that.purchaseList, function () {
                        that.elementAlert('提示信息', '恭喜提交成功')
                        loadPage('/main/Approval')
                    })
                }
                this.approvalSubmit(formName, {
                    Title: this.ruleForm.Title,
                    Remark: this.ruleForm.remark,
                    ProjectName: ProjectName,
                    ProjectId: this.ruleForm.ProjectId
                }, callBack, {
                        ProjectId: this.ruleForm.ProjectId
                    })
            },
            //搜索物料列表
            searchCode() {
                var that = this
                if (!this.searchForm.name) return
                var url = jinDomarn + '/Pick?keyWord=' + that.searchForm.name
                this.GetData(url, function (data) {
                    that.data = data
                    that.totalRows = data.length
                    that.getData()
                })
            },
            searchAndAdd() {
                var that = this
                if (!this.searchForm.business) return
                var url = jinDomarn + '/Pick/ReadPickingInfo?UnitName=' + that.searchForm.business
                this.GetData(url, function (data) {
                    for (let d of data) {
                        let ifBreak = false
                        for (let p of that.purchaseList) {
                            if (d.fNumber == p.fNumber) ifBreak = true
                        }
                        if (ifBreak) break
                        d['have'] = d.fQty
                        that.purchaseList.push(d)
                    }
                })
            },
            searchAndAdd2() {
                var that = this
                if (!this.searchForm.taskid) return
                var url = 'Pick/ReadDefault' + _formatQueryStr({ ApplyManId: DingData.userid, TaskId: this.searchForm.taskid })
                this.GetData(url, function (data) {
                    for (let d of data) {
                        let ifBreak = false
                        for (let p of that.purchaseList) {
                            if (d.fNumber == p.fNumber) ifBreak = true
                        }
                        if (ifBreak) break
                        d['have'] = d.fQty
                        that.purchaseList.push(d)
                    }
                })
            },
            //添加申请物料
            addGood(index, good) {
                for (let p of this.purchaseList) {
                    if (p.fNumber == good.fNumber) return
                }
                good['have'] = good.fQty
                this.purchaseList.push(good)
            },
            //删除申请物料
            deleteGood(index) {
                this.purchaseList.splice(index, 1)
            },
            //加载重新发起审批传递的数据
            loadReApprovalData() {
                if (!ReApprovalTempData.valid) return
                this.ruleForm.Title = ReApprovalTempData.Title
                ReApprovalTempData.valid = false
                this.purchaseList = ReApprovalTempData.data
            },
            //显示临时保存数据
            saveTempData() {
                setLocalObj('officeSupplies', this.purchaseList)
                this.elementAlert('提示信息', '保存成功')
            },
            loadTempData() {
                var data = getLocalObj('officeSupplies')
                console.log('load officeSupplies')
                console.log(data)
                if (data && data.length && data.length > 0) this.purchaseList = data
                localStorage.removeItem('officeSupplies')
            }
        },
        created: function () {
            //FlowId = 6
            this.getNodeInfo()
            this.getProjects()
            this.getApproInfo()
            this.loadTempData()
            this.loadReApprovalData()
            loadHtml("mainPage", "partPage")
        }
    })

</script>



